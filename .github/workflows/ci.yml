name: CI

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install
        run: |
          yarn install
      - name: yarn test
        run: |
          yarn test
        env:
          CI: true
      - name: create env file
        run: |
          touch .env
          echo ENGINE_API_KEY =${{ secrets.ENGINE_API_KEY }} >> .env
          echo JWT_ACCESS_TOKEN_SECRET =${{ secrets.JWT_ACCESS_TOKEN_SECRET }} >> .env
          echo JWT_REFRESH_TOKEN_SECRET =${{ secrets.JWT_REFRESH_TOKEN_SECRET }} >> .env
          echo JWT_VERIFY_EMAIL_SECRET =${{ secrets.JWT_VERIFY_EMAIL_SECRET }} >> .env
          echo JWT_RESET_PASSWORD_SECRET =${{ secrets.JWT_RESET_PASSWORD_SECRET }} >> .env
          echo DATABASE_URL =${{ secrets.DATABASE_URL }} >> .env
          echo SENDGRID_API_KEY =${{ secrets.SENDGRID_API_KEY }} >> .env
          echo FACEBOOK_CLIENT_ID =${{ secrets.FACEBOOK_CLIENT_ID }} >> .env
          echo FACEBOOK_CLIENT_SECRET =${{ secrets.FACEBOOK_CLIENT_SECRET }} >> .env
          echo GOOGLE_CLIENT_ID =${{ secrets.GOOGLE_CLIENT_ID }} >> .env
          echo GOOGLE_CLIENT_SECRET =${{ secrets.GOOGLE_CLIENT_SECRET }} >> .env
          echo GOOGLE_MAP_API_KEY =${{ secrets.GOOGLE_MAP_API_KEY }} >> .env
          echo S3_ACCESS_ID =${{ secrets.S3_ACCESS_ID }} >> .env
          echo S3_ACCESS_SECRET =${{ secrets.S3_ACCESS_SECRET }} >> .env
          echo GOOGLE_MAP_API_KEY =${{ secrets.GOOGLE_MAP_API_KEY }} >> .env
          echo STRIPE_SECRET_KEY =${{ secrets.STRIPE_SECRET_KEY}} >> .env
          echo GOGOX_APP_ID =${{ secrets.GOGOX_APP_ID }} >> .env
          echo GOGOX_SECRET_KEY =${{ secrets.GOGOX_SECRET_KEY }} >> .env
          echo ALGOLIA_SECRET_KEY =${{ secrets.ALGOLIA_SECRET_KEY }} >> .env
      - name: yarn build
        run: |
          yarn run build --if-present
      - name: Add remote origin
        run: |
           git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
      - name: Deploy to Heroku
        run: |
           git push heroku HEAD:master -f